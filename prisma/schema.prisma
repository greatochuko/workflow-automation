// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CLIENT
  FREELANCER
}

model User {
  id             String      @id @default(cuid())
  fullName       String
  email          String
  password       String
  role           UserRole
  profilePicture String      @default("")
  companyName    String      @default("")
  specialties    String[]
  knowledgeBase  Json[]
  videoTypes     VideoType[] @relation(name: "UserVideoTypes")

  // Self-relations
  assignedFreelancers User[] @relation("FreelancerToClient")
  assignedClients     User[] @relation("FreelancerToClient")

  phoneNumber String   @default("")
  website     String   @default("")
  threads     String   @default("")
  instagram   String   @default("")
  facebook    String   @default("")
  twitter     String   @default("")
  linkedin    String   @default("")
  youtube     String   @default("")
  tiktok      String   @default("")
  snapchat    String   @default("")
  pinterest   String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  videoTypesCreated VideoType[] @relation(name: "UserCreatedVideoTypes")
}

model VideoType {
  id          String   @id @default(cuid())
  name        String
  createdBy   User     @relation(fields: [createdById], references: [id], name: "UserCreatedVideoTypes")
  createdById String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  user   User?   @relation(name: "UserVideoTypes", fields: [userid], references: [id])
  userid String?
}
