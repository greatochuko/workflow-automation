// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CLIENT
  FREELANCER
}

model User {
  id              String   @id @default(cuid())
  fullName        String
  email           String
  password        String
  role            UserRole
  profilePicture  String   @default("")
  companyName     String   @default("")
  specialties     String[]
  certifications  String[]
  knowledgeBase   Json[]
  videoTypes      String[]
  passwordChanged Boolean  @default(false)

  // Self-relations
  assignedFreelancers User[] @relation("FreelancerToClient")
  assignedClients     User[] @relation("FreelancerToClient")

  phoneNumber String   @default("")
  website     String   @default("")
  threads     String   @default("")
  instagram   String   @default("")
  facebook    String   @default("")
  twitter     String   @default("")
  linkedin    String   @default("")
  youtube     String   @default("")
  tiktok      String   @default("")
  snapchat    String   @default("")
  pinterest   String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  projects Project[]
}

model AppSettings {
  id           String   @id @default("default")
  defaultTypes String[]
}

enum ProjectStatus {
  IN_PROGRESS
  SUBMITTED
  APPROVED
  REJECTED
}

model Project {
  id             String        @id @default(cuid())
  title          String
  description    String
  scheduledDate  DateTime
  videoType      String
  files          Json[]
  status         ProjectStatus
  submissionDate DateTime?
  feedback       String        @default("")
  completedFile  Json?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  captionData    Json?

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String
}
